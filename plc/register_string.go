// Code generated by "stringer -type register"; DO NOT EDIT.

package plc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[fieldIoConnection-0]
	_ = x[redPowerPortBottom-1]
	_ = x[redPowerPortOuter-2]
	_ = x[redPowerPortInner-3]
	_ = x[bluePowerPortBottom-4]
	_ = x[bluePowerPortOuter-5]
	_ = x[bluePowerPortInner-6]
	_ = x[redControlPanelRed-7]
	_ = x[redControlPanelGreen-8]
	_ = x[redControlPanelBlue-9]
	_ = x[redControlPanelIntensity-10]
	_ = x[blueControlPanelRed-11]
	_ = x[blueControlPanelGreen-12]
	_ = x[blueControlPanelBlue-13]
	_ = x[blueControlPanelIntensity-14]
	_ = x[redControlPanelColor-15]
	_ = x[blueControlPanelColor-16]
	_ = x[redControlPanelLastColor-17]
	_ = x[blueControlPanelLastColor-18]
	_ = x[redControlPanelSegments-19]
	_ = x[blueControlPanelSegments-20]
	_ = x[registerCount-21]
}

const _register_name = "fieldIoConnectionredPowerPortBottomredPowerPortOuterredPowerPortInnerbluePowerPortBottombluePowerPortOuterbluePowerPortInnerredControlPanelRedredControlPanelGreenredControlPanelBlueredControlPanelIntensityblueControlPanelRedblueControlPanelGreenblueControlPanelBlueblueControlPanelIntensityredControlPanelColorblueControlPanelColorredControlPanelLastColorblueControlPanelLastColorredControlPanelSegmentsblueControlPanelSegmentsregisterCount"

var _register_index = [...]uint16{0, 17, 35, 52, 69, 88, 106, 124, 142, 162, 181, 205, 224, 245, 265, 290, 310, 331, 355, 380, 403, 427, 440}

func (i register) String() string {
	if i < 0 || i >= register(len(_register_index)-1) {
		return "register(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _register_name[_register_index[i]:_register_index[i+1]]
}
